[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket

[supervisord]
logfile=/dev/null             ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=0            ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=0             ; (num of main logfile rotation backups;default 10)
loglevel=info                 ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid  ; (supervisord pidfile;default supervisord.pid)
nodaemon=true                 ; (start in foreground if true;default false)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[program:nginx] ## This is the part where we give the name and add config for our 1st service
command=nginx -g 'daemon off;'
autostart=true
autorestart=true ## This setting specifies that the supervisor will restart the service in case of failure
catch_workers_output = Yes
stdout_events_enabled=true
stderr_events_enabled=true
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr

#[program:php-fpm] ## This is the part where we give the name and add config for our 1st service
#command=/usr/sbin/php-fpm
#autostart=true
#autorestart=true ## This setting specifies that the supervisor will restart the service in case of failure
#catch_workers_output = Yes
#stdout_events_enabled=true
#stderr_events_enabled=true
#stdout_logfile_maxbytes=0
#stderr_logfile_maxbytes=0
#stdout_logfile=/dev/stdout
#stderr_logfile=/dev/stderr
#nodaemon=true

[program:pdns] ## This is the part where we give the name and add config for our 1st service
command=/usr/sbin/pdns_server  ## This is the main command to run our 1st service
autorestart=true ## This setting specifies that the supervisor will restart the service in case of failure
catch_workers_output = Yes
stdout_events_enabled=true
stderr_events_enabled=true
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
nodaemon=true

[program:pdns_recursor] ## This is the part where we give the name and add config for our 1st service
command=/usr/sbin/pdns_recursor --config-dir=/etc/pdns-recursor/  ## This is the main command to run our 1st service
autorestart=true ## This setting specifies that the supervisor will restart the service in case of failure
catch_workers_output = Yes
stdout_events_enabled=true
stderr_events_enabled=true
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
nodaemon=true

[program:powerdns-admin] ## This is the part where we give the name and add config for our 1st service
directory=/var/www/html/pdns
command=gunicorn --pid /run/powerdns-admin/pid --bind unix:/run/powerdns-admin/socket 'powerdnsadmin:create_app()'
autorestart=true ## This setting specifies that the supervisor will restart the service in case of failure
catch_workers_output = Yes
stdout_events_enabled=true
stderr_events_enabled=true
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
nodaemon=true
